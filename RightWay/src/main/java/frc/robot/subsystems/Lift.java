// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Lift extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private WPI_TalonSRX liftMotor;
private WPI_TalonSRX leftGrabber;
private WPI_TalonSRX rightGrabber;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static final double NO_SPEED = 0;
    /**
    *
    */
    public Lift() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
liftMotor = new WPI_TalonSRX(7);
 
 

leftGrabber = new WPI_TalonSRX(20);
 
 

rightGrabber = new WPI_TalonSRX(21);
 
 


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

rightGrabber.setInverted(true);
rightGrabber.follow(leftGrabber);

    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void grab(double speed) {
        // Give the grabber a speed to grab with
        leftGrabber.set(speed);
    }

    public void lift(double upspeed, double downspeed) {
        // Give the lift a speed to lift with
       
        if (upspeed > 0 & downspeed <= 0)
          {
              liftMotor.set(upspeed);
          }

          if (downspeed > 0 & upspeed <= 0)
          {
              liftMotor.set(-downspeed);
          }

          if (downspeed == 0 & upspeed == 0)
          {
              liftMotor.set(NO_SPEED);
          }

          if (downspeed > 0 & upspeed > 0)
          {
              liftMotor.set(NO_SPEED);
          }
    }
}

